        RED="\[\033[0;31m\]"
     YELLOW="\[\033[1;33m\]"
      GREEN="\[\033[0;32m\]"
       BLUE="\[\033[1;34m\]"
  LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
 LIGHT_BLUE="\[\033[38;5;81m\]"
      WHITE="\[\033[1;37m\]"
 LIGHT_GRAY="\[\033[0;37m\]"
 COLOR_NONE="\[\033[0m\]"

# Makes colors in CLI ls output
alias ls="ls -pF --color=auto"  # ls output with "/" for folders
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

export LSCOLORS="ExGxBxDxCxEgEdxbxgxcxd"  # ls color

export TERM=xterm-256color

# Uncomment for cygwin
# source /etc/profile.d/bash_completion.sh
# source /etc/profile.d/git-prompt.sh

export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_SHOWCOLORHINTS=1

PROMPT_DIRTRIM=3

function get_err_code() {
    local EXIT="$?"

    CODE=""
    if [ $EXIT != 0 ]; then
        echo "${RED}✗${COLOR_NONE} "
    else
        echo "${LIGHT_GREEN}✓${COLOR_NONE} "
    fi
}

if [[ -n $SSH_CLIENT ]]; then
  prompt_user_host_name="@${HOSTNAME}"
else
  prompt_user_host_name=""
fi

# Courtesy of Eli Bendersky blog + mods
log_bash_persistent_history()
{
  [[ $(history 1) =~ ^[[:space:]]*[0-9]+[[:space:]]+(.+)$ ]]
  local command_part="${BASH_REMATCH[1]}"
  if [ "$command_part" != "$PERSISTENT_HISTORY_LAST" ] \
    && ! [[ "$command_part " =~ ^hhh{0,1}[[:space:]]+ ]];
  then
    echo "$(date "+%Y-%m-%d.%H:%M:%S")" " | " "$command_part" >> ~/.persistent_history
    export PERSISTENT_HISTORY_LAST="$command_part"
  fi
}

# Finding history
function hhh()
{
    if [[ $# -eq 0 ]]; then
        cat ~/.persistent_history | less -R +G
    elif [[ $# -eq 1 ]]; then
        cat ~/.persistent_history | grep -i --color=always "$1" | less -R +G
    elif [[ $# -eq 2 ]]; then
        cat ~/.persistent_history | grep -i --color=always "$1" | grep -i --color=always "$2" | less -R +G
    elif [[ $# -eq 3 ]]; then
        cat ~/.persistent_history | grep -i --color=always "$1" | grep -i --color=always "$2" | grep -i --color=always "$3" | less -R +G
    fi
}

function hh()
{
    if [[ $# -eq 0 ]]; then
        cat ~/.persistent_history | tail -n 25
    elif [[ $# -eq 1 ]]; then
        cat ~/.persistent_history | grep -i --color=always "$1" | tail -n 25
    elif [[ $# -eq 2 ]]; then
        cat ~/.persistent_history | grep -i --color=always "$1" | grep -i --color=always "$2" | tail -n 25
    elif [[ $# -eq 3 ]]; then
        cat ~/.persistent_history | grep -i --color=always "$1" | grep -i --color=always "$2" | grep -i --color=always "$3" | tail -n 25
    fi
}

# Determine active Python virtualenv or conda details.
function get_virtualenv() {
    if test -z "$VIRTUAL_ENV" ; then
       echo ""
    else
       echo "${YELLOW}[`basename \"$VIRTUAL_ENV\"`]${COLOR_NONE} "
    fi
}

function get_conda_env() {
	if test -z "$CONDA_DEFAULT_ENV" ; then
       echo ""
    else
       echo "${YELLOW}[${CONDA_DEFAULT_ENV}]${COLOR_NONE} "
    fi
}

function get_err_code() {
    local EXIT="$?"

    CODE=""
    if [ $EXIT != 0 ]; then
        echo "${RED}[FAIL=${EXIT}]${COLOR_NONE} "
    else
        echo "${LIGHT_GREEN}[OK]${COLOR_NONE} "
    fi
}

function middle_part() {
    # echo -e "${BLUE}\u:${WHITE}$(python ~/.short_pwd.py)${COLOR_NONE}"
    echo -e "${BLUE}\u${prompt_user_host_name}:${WHITE}\w${COLOR_NONE}"
}

function prompt_symbol() {
    echo -e  "\n${LIGHT_GREEN}> "
}

function __prompt_command() {
    __git_ps1 "\n$(get_err_code)$(get_virtualenv)$(get_conda_env)$(middle_part)" "$(prompt_symbol)"

    log_bash_persistent_history
}
# export PS1="${WHITE}\u:${COLOR_NONE}\w ${LIGHT_BLUE}\$${COLOR_NONE}"
PROMPT_COMMAND=__prompt_command
trap 'tput sgr0' DEBUG

alias glog='git log --graph --abbrev-commit --decorate --format=format:"%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)" --all'
alias glog2='git log --graph --abbrev-commit --decorate --format=format:"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n""          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)" --all'

if [[ "${OSTYPE}" == 'cygwin' ]]; then
    set -o igncr
    export SHELLOPTS
fi

# Add `/cygwin/...` to path for cygwin
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
eval "$('/c/ProgramData/Anaconda3/Scripts/conda.exe' 'shell.bash' 'hook')"
# <<< conda initialize <<<

conda activate dev

export PATH="$HOME/bin:/bin:/usr/bin:/usr/local/bin:$PATH"

# This makes Windows native apps work
alias ipython='winpty ipython'
alias python='winpty python'
alias node='winpty node'
alias powershell='winpty powershell'
